C51 COMPILER V9.57.0.0   I2C                                                               06/07/2018 09:51:48 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\keil4_c51\C51\BIN\C51.EXE src\i2c.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include "STC8xxxx.H"
   3          #include "intrins.h"
   4          
   5          #define I2C_OVERTIME  250
   6          
   7          #define ERR_OT        0x01
   8          
   9          sbit SDA = P3^3;
  10          sbit SCL = P3^2;
  11          
  12          static bit isda;        //设备地址标志
  13          static bit isma;        //存储地址标志
  14          
  15          static uint8_t xdata I2C_Reg[I2C_REGSIZE] = {0};
  16          static uint8_t xdata I2C_err = 0;
  17          
  18          //========================================================================
  19          // function:    Wait
  20          // description: i2c wait
  21          // parameter:   void
  22          // return:      void
  23          // version:     V2.0, 2018-4-24
  24          //========================================================================
  25          void Wait(void){
  26   1        uint8_t time = I2C_OVERTIME;
  27   1        if(I2C_err) return;
  28   1        while (!(I2CMSST & 0x40) && time--);
  29   1        I2CMSST &= ~0x40;
  30   1        if(time) I2C_err |= ERR_OT;
  31   1      }
  32          
  33          //========================================================================
  34          // function:    Start
  35          // description: i2c general start signal
  36          // parameter:   void
  37          // return:      void
  38          // version:     V2.0, 2018-4-24
  39          //========================================================================
  40          void Start(void){
  41   1        if(I2C_err) return;
  42   1        EAXSFR();
  43   1        I2CMSCR = 0x01;     //set master cmd to general start signal
  44   1        Wait();
  45   1        EAXRAM();
  46   1      }
  47          
  48          //========================================================================
  49          // function:    SendData
  50          // description: i2c sent _data
  51          // parameter:   void
  52          // return:      void
  53          // version:     V2.0, 2018-4-24
  54          //========================================================================
C51 COMPILER V9.57.0.0   I2C                                                               06/07/2018 09:51:48 PAGE 2   

  55          void SendData(char dat){
  56   1        if(I2C_err) return;
  57   1        EAXSFR();
  58   1        I2CTXD = dat;        //write _data to buf
  59   1        I2CMSCR = 0x02;      //set master cmd to sent _data
  60   1        Wait();
  61   1        EAXRAM();
  62   1      }
  63          
  64          //========================================================================
  65          // function:    RecvACK
  66          // description: i2c receive ack
  67          // parameter:   void
  68          // return:      void
  69          // version:     V2.0, 2018-4-24
  70          //========================================================================
  71          void RecvACK(void){
  72   1        if(I2C_err) return;
  73   1        EAXSFR();
  74   1        I2CMSCR = 0x03;      //set master cmd to sent ack
  75   1        Wait();
  76   1        EAXRAM();
  77   1      }
  78          
  79          //========================================================================
  80          // function:    RecvData
  81          // description: i2c receive _data
  82          // parameter:   void
  83          // return:      void
  84          // version:     V2.0, 2018-4-24
  85          //========================================================================
  86          char RecvData(void){
  87   1        char rxd = 0;
  88   1        if(I2C_err) return 0;
  89   1        EAXSFR();
  90   1        I2CMSCR = 0x04;      //set master cmd to receive _data
  91   1        Wait();
  92   1        rxd = I2CRXD;
  93   1        EAXRAM();
  94   1        return rxd;
  95   1      }
  96          
  97          //========================================================================
  98          // function:    SendACK
  99          // description: i2c sent ack
 100          // parameter:   void
 101          // return:      void
 102          // version:     V2.0, 2018-4-24
 103          //========================================================================
 104          void SendACK(void){
 105   1        if(I2C_err) return;
 106   1        EAXSFR();
 107   1        I2CMSST = 0x00;       //set ack
 108   1        I2CMSCR = 0x05;       //set master cmd to sent
 109   1        Wait();
 110   1        EAXRAM();
 111   1      }
 112          
 113          //========================================================================
 114          // function:    SendNAK
 115          // description: i2c sent nak
 116          // parameter:   void
C51 COMPILER V9.57.0.0   I2C                                                               06/07/2018 09:51:48 PAGE 3   

 117          // return:      void
 118          // version:     V2.0, 2018-4-24
 119          //========================================================================
 120          void SendNAK(void){
 121   1        if(I2C_err) return;
 122   1        EAXSFR();
 123   1        I2CMSST = 0x01;         //set nak
 124   1        I2CMSCR = 0x05;         //set master cmd to sent
 125   1        Wait();
 126   1        EAXRAM();
 127   1      }
 128          
 129          //========================================================================
 130          // function:    Stop
 131          // description: i2c general start signal
 132          // parameter:   void
 133          // return:      void
 134          // version:     V2.0, 2018-4-24
 135          //========================================================================
 136          void Stop(void){
 137   1        EAXSFR();
 138   1        I2CMSCR = 0x06;          //set master cmd to general stop signal
 139   1        Wait();
 140   1        EAXRAM();
 141   1      }
 142          
 143          //========================================================================
 144          // function:    i2c_config
 145          // description: i2c config
 146          // parameter:   void
 147          // return:      void
 148          // version:     V2.0, 2018-4-24
 149          //========================================================================
 150          void i2c_config(void){
 151   1        EAXSFR();
 152   1        P_SW2 |=  0x30;
 153   1        I2CCFG = 0xe0;            //enable i2c master
 154   1        I2CMSST = 0x00;
 155   1        EAXRAM();
 156   1      }
 157          
 158          //========================================================================
 159          // function:    i2c_write
 160          // description: i2c write a byte to slave
 161          // parameter:   addr, reg, pbuf, len
 162          // return:      ret flag
 163          // version:     V2.0, 2018-5-24
 164          //========================================================================
 165          uint8_t i2c_write(uint8_t addr, uint8_t reg, uint8_t* pbuf, uint8_t len){
 166   1        I2C_err = 0;
 167   1        Start();           //start signal
 168   1        SendData(addr<<1); //dev_addr<<1 + w
 169   1        RecvACK();
 170   1        SendData(reg);     //mem_addr
 171   1        RecvACK();
 172   1        for(; len>0; len--){
 173   2          SendData(*pbuf++);     //byte_data
 174   2          RecvACK();
 175   2        }
 176   1        Stop();            //stop signal
 177   1        return I2C_err;
 178   1      }
C51 COMPILER V9.57.0.0   I2C                                                               06/07/2018 09:51:48 PAGE 4   

 179          
 180          //========================================================================
 181          // function:    i2c_read
 182          // description: i2c read a byte from slave
 183          // parameter:   addr, reg, pbuf, len
 184          // return:      ret flag
 185          // version:     V2.0, 2018-5-24
 186          //========================================================================
 187          uint8_t i2c_read(uint8_t addr, uint8_t reg, uint8_t* pbuf, uint8_t len){
 188   1        I2C_err = 0;
 189   1        Start();                  //start signal
 190   1        SendData((addr<<1)+1);    //dev_addr<<1 + r
 191   1        RecvACK();
 192   1        SendData(reg);            //mem_addr
 193   1        RecvACK();
 194   1        for(; len>1; len--){
 195   2          *pbuf++ = RecvData();   //read _data
 196   2          SendACK();
 197   2        }
 198   1        *pbuf = RecvData();       //read _data
 199   1        SendNAK();
 200   1        Stop();                   //stop signal
 201   1        return I2C_err;
 202   1      }
 203          
 204          void test(void){
 205   1        Start();                                    //发送起始命令
 206   1        SendData(0x5a);                             //发送设备地址+写命令
 207   1        RecvACK();
 208   1        SendData(0x00);                             //发送存储地址
 209   1        RecvACK();
 210   1        SendData(0x12);                             //写测试数据1
 211   1        RecvACK();
 212   1        SendData(0x78);                             //写测试数据2
 213   1        RecvACK();
 214   1        Stop();                                     //发送停止命令
 215   1      
 216   1        Start();                                    //发送起始命令
 217   1        SendData(0x5a);                             //发送设备地址+写命令
 218   1        RecvACK();
 219   1        SendData(0x00);                             //发送存储地址高字节
 220   1        RecvACK();
 221   1        Start();                                    //发送起始命令
 222   1        SendData(0x5b);                             //发送设备地址+读命令
 223   1        RecvACK();
 224   1        P0 = RecvData();                            //读取数据1
 225   1        SendACK();
 226   1        P2 = RecvData();                            //读取数据2
 227   1        SendNAK();
 228   1        Stop();                                     //发送停止命令
 229   1        while (1);
 230   1      }
 231          
 232          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    445    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    129    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
C51 COMPILER V9.57.0.0   I2C                                                               06/07/2018 09:51:48 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
