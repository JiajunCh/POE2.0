C51 COMPILER V9.57.0.0   I2C                                                               06/13/2018 13:54:50 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\keil4_c51\C51\BIN\C51.EXE src\i2c.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include "STC8xxxx.H"
   3          #include "intrins.h"
   4          
   5          #define I2C_OVERTIME  (0xff)
   6          
   7          #define ERR_OT        0x01
   8          
   9          sbit SDA = P3^3;
  10          sbit SCL = P3^2;
  11          
  12          static bit isda;        //设备地址标志
  13          static bit isma;        //存储地址标志
  14          
  15          static uint8_t xdata I2C_Reg[I2C_REGSIZE] = {0};
  16          static uint8_t I2C_err = 0;
  17          
  18          //========================================================================
  19          // function:    Wait
  20          // description: i2c wait
  21          // parameter:   void
  22          // return:      void
  23          // version:     V2.0, 2018-4-24
  24          //========================================================================
  25          void Wait(void){
  26   1        uint8_t time = I2C_OVERTIME;
  27   1        while (!(I2CMSST & 0x40) && time--);
  28   1        I2CMSST &= ~0x40;
  29   1        if(time) I2C_err |= ERR_OT;
  30   1      }
  31          
  32          //========================================================================
  33          // function:    Start
  34          // description: i2c general start signal
  35          // parameter:   void
  36          // return:      void
  37          // version:     V2.0, 2018-4-24
  38          //========================================================================
  39          void Start(void){
  40   1      //  if(I2C_err) return;
  41   1        EAXSFR();
  42   1        I2CMSCR = 0x01;     //set master cmd to general start signal
  43   1        Wait();
  44   1        EAXRAM();
  45   1      }
  46          
  47          //========================================================================
  48          // function:    SendData
  49          // description: i2c sent _data
  50          // parameter:   void
  51          // return:      void
  52          // version:     V2.0, 2018-4-24
  53          //========================================================================
  54          void SendData(char dat){
C51 COMPILER V9.57.0.0   I2C                                                               06/13/2018 13:54:50 PAGE 2   

  55   1      //  if(I2C_err) return;
  56   1        EAXSFR();
  57   1        I2CTXD = dat;        //write _data to buf
  58   1        I2CMSCR = 0x02;      //set master cmd to sent _data
  59   1        Wait();
  60   1        EAXRAM();
  61   1      }
  62          
  63          //========================================================================
  64          // function:    RecvACK
  65          // description: i2c receive ack
  66          // parameter:   void
  67          // return:      void
  68          // version:     V2.0, 2018-4-24
  69          //========================================================================
  70          void RecvACK(void){
  71   1      //  if(I2C_err) return;
  72   1        EAXSFR();
  73   1        I2CMSCR = 0x03;      //set master cmd to sent ack
  74   1        Wait();
  75   1        EAXRAM();
  76   1      }
  77          
  78          //========================================================================
  79          // function:    RecvData
  80          // description: i2c receive _data
  81          // parameter:   void
  82          // return:      void
  83          // version:     V2.0, 2018-4-24
  84          //========================================================================
  85          char RecvData(void){
  86   1        char rxd = 0;
  87   1      //  if(I2C_err) return 0;
  88   1        EAXSFR();
  89   1        I2CMSCR = 0x04;      //set master cmd to receive _data
  90   1        Wait();
  91   1        rxd = I2CRXD;
  92   1        EAXRAM();
  93   1        return rxd;
  94   1      }
  95          
  96          //========================================================================
  97          // function:    SendACK
  98          // description: i2c sent ack
  99          // parameter:   void
 100          // return:      void
 101          // version:     V2.0, 2018-4-24
 102          //========================================================================
 103          void SendACK(void){
 104   1      //  if(I2C_err) return;
 105   1        EAXSFR();
 106   1        I2CMSST = 0x00;       //set ack
 107   1        I2CMSCR = 0x05;       //set master cmd to sent
 108   1        Wait();
 109   1        EAXRAM();
 110   1      }
 111          
 112          //========================================================================
 113          // function:    SendNAK
 114          // description: i2c sent nak
 115          // parameter:   void
 116          // return:      void
C51 COMPILER V9.57.0.0   I2C                                                               06/13/2018 13:54:50 PAGE 3   

 117          // version:     V2.0, 2018-4-24
 118          //========================================================================
 119          void SendNAK(void){
 120   1      //  if(I2C_err) return;
 121   1        EAXSFR();
 122   1        I2CMSST = 0x01;         //set nak
 123   1        I2CMSCR = 0x05;         //set master cmd to sent
 124   1        Wait();
 125   1        EAXRAM();
 126   1      }
 127          
 128          //========================================================================
 129          // function:    Stop
 130          // description: i2c general start signal
 131          // parameter:   void
 132          // return:      void
 133          // version:     V2.0, 2018-4-24
 134          //========================================================================
 135          void Stop(void){
 136   1        EAXSFR();
 137   1        I2CMSCR = 0x06;          //set master cmd to general stop signal
 138   1        Wait();
 139   1        EAXRAM();
 140   1      }
 141          
 142          //========================================================================
 143          // function:    i2c_config
 144          // description: i2c config
 145          // parameter:   void
 146          // return:      void
 147          // version:     V2.0, 2018-4-24
 148          //========================================================================
 149          void i2c_config(void){
 150   1        EAXSFR();
 151   1        P3PU |= 0x0C;
 152   1        P_SW2 |=  0x30;
 153   1        I2CCFG = 0xe0;            //enable i2c master
 154   1        I2CMSST = 0x00;
 155   1        EAXRAM();
 156   1      }
 157          
 158          //========================================================================
 159          // function:    i2c_write
 160          // description: i2c write a byte to slave
 161          // parameter:   addr, reg, pbuf, len
 162          // return:      ret flag
 163          // version:     V2.0, 2018-5-24
 164          //========================================================================
 165          uint8_t i2c_write(uint8_t addr, uint8_t reg, uint8_t* pbuf, uint8_t len){
 166   1        I2C_err = 0;
 167   1        Start();           //start signal
 168   1        SendData(addr<<1); //dev_addr<<1 + w
 169   1        RecvACK();
 170   1        SendData(reg);     //mem_addr
 171   1        RecvACK();
 172   1        for(; len>0; len--){
 173   2          SendData(*pbuf++);     //byte_data
 174   2          RecvACK();
 175   2        }
 176   1        Stop();            //stop signal
 177   1        return I2C_err;
 178   1      }
C51 COMPILER V9.57.0.0   I2C                                                               06/13/2018 13:54:50 PAGE 4   

 179          
 180          //========================================================================
 181          // function:    i2c_read
 182          // description: i2c read a byte from slave
 183          // parameter:   addr, reg, pbuf, len
 184          // return:      ret flag
 185          // version:     V2.0, 2018-5-24
 186          //========================================================================
 187          uint8_t i2c_read(uint8_t addr, uint8_t reg, uint8_t* pbuf, uint8_t len){
 188   1        I2C_err = 0;
 189   1        Start();           //start signal
 190   1        SendData(addr<<1); //dev_addr<<1 + w
 191   1        RecvACK();
 192   1        SendData(reg);     //mem_addr
 193   1        RecvACK();
 194   1        Start();                  //start signal
 195   1        SendData((addr<<1)+1);    //dev_addr<<1 + r
 196   1        RecvACK();
 197   1        for(; len>1; len--){
 198   2          *pbuf++ = RecvData();   //read _data
 199   2          SendACK();
 200   2        }
 201   1        *pbuf = RecvData();       //read _data
 202   1        SendNAK();
 203   1        Stop();                   //stop signal
 204   1        return I2C_err;
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
